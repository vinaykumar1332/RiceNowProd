:root {
  --border-radius: 8px;
  --gap: 1rem;
  --transition-base: all 0.22s cubic-bezier(0.2, 0.9, 0.2, 1);
  --text-primary: #111111;
  --text-secondary: #444444;
  --text-muted: #888888;
  --accent-color: #0a7;
  --bg-light: #fafafa;
  --card-border: rgba(0, 0, 0, 0.06);
  --button-border: #cccccc;
  --brand-primary: #0a7;

  --font-family: "Inter", "Segoe UI", system-ui, -apple-system, Roboto, "Helvetica Neue", Arial, sans-serif;
  --font-size-base: 0.95rem;
  --font-size-small: 0.85rem;
  --transition-fast: all 0.16s ease-in-out;
  --transition-smooth: all 0.28s cubic-bezier(0.25, 0.8, 0.25, 1);
  --elevation-1: 0 4px 12px rgba(0, 0, 0, 0.06);
  --elevation-2: 0 8px 28px rgba(0, 0, 0, 0.09);
  --filter-footer-height: 68px;
  /* used to ensure content doesn't hide under the sticky footer */
}

/* apply font & smoothing globally */
html,
body,
button,
select,
input,
label {
  font-family: var(--font-family);
  font-size: var(--font-size-base);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: var(--text-primary);
  line-height: 1.35;
}

/* page wrapper */
.page.products-page-wrapper {
  padding: 1rem;
  background: #fff;
  min-height: 100vh;
  padding-top: 60px;
}

/* --------------------
   Grid / Cards
   -------------------- */
.cards-parent {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: 20px;
  align-items: start;
}

/* --------------------
   Filter panel (drawer)
   -------------------- */
.filter-panel {
  position: fixed;
  left: 0;
  top: 70px;
  bottom: 0;
  width: 320px;
  max-width: 80%;
  background: #fff;
  box-shadow: 12px 0 40px rgba(10, 10, 10, 0.12);
  transform: translateX(-100%);
  transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1), box-shadow 0.3s ease-in-out;
  z-index: 900;
  display: flex;
  flex-direction: column;
  border-right: 1px solid var(--card-border);
  will-change: transform;
  -webkit-overflow-scrolling: touch;
  /* ensure there's bottom padding so sticky footer doesn't overlap visual edge */
  padding-bottom: 0;
}

.filter-panel.open {
  transform: translateX(0);
  box-shadow: 12px 0 40px rgba(0, 0, 0, 0.18);
}

/* filter head (title + close) */
.filter-head {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.5rem;
  border-bottom: 1px solid var(--card-border);
  background: var(--bg-light);
  font-size: 1rem;
  font-weight: 700;
  color: var(--text-primary);
  gap: 12px;
  position: relative;
  top: -4px;
  z-index: 12;
  max-height: 42px;
  /* sit above the scrolling body */
}

/* modern floating close button */


.details-overlay.open{
  .drawer-close {
  background: transparent;
  border: none;
  cursor: pointer;
  font-size: 1.3rem;
  color: var(--text-muted);
  transition: var(--transition-smooth);
  padding: 6px;
  border-radius: 50%;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: fixed;
  left:1px;
  font-size: 30px;
}
}
.drawer-close {
  background: transparent;
  border: none;
  cursor: pointer;
  font-size: 1.3rem;
  color: var(--text-muted);
  transition: var(--transition-smooth);
  padding: 6px;
  border-radius: 50%;
  display: inline-flex;
  align-items: center;
  justify-content: center;

}

/* hover/active for close */
.drawer-close:hover {
  color: var(--accent-color);
  transform: rotate(90deg) scale(1.12);
}

.filter-body {
  padding: 16px;
  display: flex;
  flex-direction: column;
  gap: 24px;
  /* make the body scrollable within the fixed height of the panel */
  overflow: auto;
  flex: 1 1 auto;
  /* add bottom padding to avoid content being hidden under sticky footer */
  padding-bottom: calc(var(--filter-footer-height) + 20px);
}

/* filter sections */
.filter-body section {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.filter-body section h3,
.filter-body section h4 {
  font-size: 0.95rem;
  font-weight: 700;
  color: var(--text-primary);
  margin: 0;
  padding-bottom: 8px;
  border-bottom: 1px solid var(--card-border);
}

/* selects */
.filter-body select {
  padding: 10px;
  border: 1px solid var(--card-border);
  border-radius: var(--border-radius);
  font-size: var(--font-size-base);
  color: var(--text-primary);
  background: #fff;
  transition: var(--transition-base);
  cursor: pointer;
  outline: none;
}

.filter-body select:hover,
.filter-body select:focus {
  border-color: var(--accent-color);
  box-shadow: 0 4px 10px rgba(10, 128, 102, 0.04);
}

/* --------------------
   Price checkboxes & brand/kg sections
   -------------------- */
.price-checkboxes {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.price-checkboxes label,
.brand-radios label,
.kg-radios label {
  display: flex;
  align-items: center;
  gap: 12px;
  font-size: var(--font-size-small);
  color: var(--text-secondary);
  cursor: pointer;
  transition: color var(--transition-base), transform var(--transition-fast);
  user-select: none;
}

.price-checkboxes label:hover,
.brand-radios label:hover,
.kg-radios label:hover {
  color: var(--text-primary);
  transform: translateX(2px);
}

/* make inputs visually consistent but custom styled below */
.price-checkboxes input[type="checkbox"],
.brand-radios input[type="radio"],
.kg-radios input[type="radio"] {
  width: 18px;
  height: 18px;
  cursor: pointer;
  flex: 0 0 18px;
  outline: none;
  display: inline-block;
}

/* brand & kg containers */
.filter-section-brand,
.filter-section-kg {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.brand-radios,
.kg-radios {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

/* --------------------
   Chips / tags
   -------------------- */
.chips {
  display: flex;
  gap: 8px;
  flex-wrap: wrap;
  margin-top: 12px;
}

.chip {
  padding: 6px 12px;
  border-radius: 999px;
  border: 1px solid var(--card-border);
  background: #fff;
  font-size: var(--font-size-small);
  color: var(--text-secondary);
  cursor: pointer;
  transition: var(--transition-smooth);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);
  user-select: none;
}

.chip:hover {
  border-color: var(--accent-color);
  background: #f8fefb;
  color: var(--text-primary);
  transform: translateY(-2px);
}

.chip.active {
  background: var(--accent-color);
  color: #fff;
  border-color: var(--accent-color);
  box-shadow: 0 6px 18px rgba(0, 128, 102, 0.18);
  transform: translateY(-2px);
}

/* --------------------
   Filter actions (footer) â€” STICKY and side-by-side
   -------------------- */
.filter-actions {
  /* Sticky footer positioned at bottom of the filter panel */
  position: fixed;
  bottom: 0;
  z-index: 14;
  /* above the body but below header if needed */
  display: flex;
  justify-content: space-between;
  gap: 12px;
  padding: 12px 60px;
  width: 320px;
  max-width: 85%;
  border-top: 1px solid var(--card-border);
  background: linear-gradient(180deg, rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 1));
  backdrop-filter: blur(4px);
  align-items: center;

}

/* make both buttons flex:1 and consistent heights */
.filter-actions button,
.filter-actions .btn,
.filter-actions .apply,
.filter-actions .clear {
  flex: 1;
  padding: 10px 16px;
  border-radius: var(--border-radius);
  font-size: var(--font-size-base);
  font-weight: 700;
  cursor: pointer;
  transition: var(--transition-smooth);
  letter-spacing: 0.2px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  min-height: 44px;
}

/* primary (apply) */
.filter-actions button.apply,
.filter-actions button:first-child,
.filter-actions .btn.primary {
  background: linear-gradient(135deg, var(--accent-color), #009977);
  color: #fff;
  border: none;
  box-shadow: 0 6px 18px rgba(0, 128, 102, 0.12);
}

.filter-actions button.apply:hover,
.filter-actions button:first-child:hover,
.filter-actions .btn.primary:hover {
  background: linear-gradient(135deg, #009977, var(--accent-color));
  transform: translateY(-3px);
  box-shadow: var(--elevation-2);
}

/* secondary (clear) */
.filter-actions button.clear,
.filter-actions button:last-child,
.filter-actions .btn {
  background: transparent;
  border: 1px solid var(--button-border);
  color: var(--text-secondary);
}

.filter-actions button.clear:hover,
.filter-actions button:last-child:hover,
.filter-actions .btn:hover {
  border-color: var(--accent-color);
  color: var(--accent-color);
  background: #f7fcfa;
  transform: translateY(-3px);
}

/* ensure side-by-side on small screens: slightly reduce gaps and keep them side-by-side */
@media (max-width: 520px) {
  .filter-actions {
    gap: 8px;
    padding: 10px 12px;
    min-height: 62px;
  }

  .filter-actions button,
  .filter-actions .btn {
    font-size: 0.92rem;
    padding: 8px 10px;
  }
}

/* --------------------
   Cart drawer styles (kept & enhanced)
   -------------------- */
.cart-drawer {
  position: fixed;
  right: -420px;
  top: 0;
  bottom: 0;
  width: 380px;
  max-width: 95%;
  background: #fff;
  box-shadow: -12px 0 40px rgba(12, 12, 12, 0.12);
  transition: right 0.28s cubic-bezier(0.2, 0.9, 0.2, 1), box-shadow 0.28s;
  z-index: 1000;
  display: flex;
  flex-direction: column;
  border-left: 1px solid var(--card-border);
  will-change: right;
}

.cart-drawer.open {
  right: 0;
  box-shadow: -12px 0 48px rgba(0, 0, 0, 0.18);
}

.cart-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 12px 14px;
  border-bottom: 1px solid var(--card-border);
  background: var(--bg-light);
  font-weight: 700;
}

.cart-body {
  padding: 12px;
  overflow: auto;
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.cart-footer {
  padding: 12px;
  border-top: 1px solid var(--card-border);
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

/* cart items */
.cart-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 8px;
  padding: 8px;
  border: 1px solid var(--card-border);
  border-radius: var(--border-radius);
  background: var(--bg-light);
}

.cart-item-left {
  display: flex;
  gap: 12px;
  align-items: center;
}

.cart-thumb {
  width: 80px;
  height: 80px;

}

.cart-actions {
  display: flex;
  gap: 8px;
  align-items: center;
}

.cart-actions button {
  padding: 6px 10px;
  border-radius: 6px;
  border: 1px solid var(--card-border);
  background: #fff;
  transition: var(--transition-base);
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.cart-actions .remove {
  background: #f33;
  color: #fff;
  border: none;
  padding: 6px 10px;
  border-radius: 6px;
  cursor: pointer;
  transition: var(--transition-base);
}

.cart-actions .remove:hover {
  background: #d32f2f;
}

/* empty state */
.cart-empty {
  color: var(--text-muted);
  padding: 18px 0;
  text-align: center;
  font-size: 0.9rem;
}

/* --------------------
   Small helpers & buttons
   -------------------- */
.page-head-wrapper {
  .btn {
    background: #fff;
    border: 1px solid var(--card-border);
    padding: 8px 10px;
    border-radius: var(--border-radius);
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    gap: 6px;
    font-size: 0.9rem;
    transition: var(--transition-base);
    position: relative;

    .filter-icon {
      position: relative;
      top: 4px;
    }
  }
}


.btn.primary {
  background: var(--accent-color);
  color: #fff;
  border: none;
}

.btn.primary:hover {
  background: #008966;
  transform: translateY(-2px);
}

.filter-btn .filter-icon {
  font-size: 1rem;
}

/* cart badge button */
.cart-badge-btn {
  position: fixed;
  bottom: 20px;
  right: 20px;
  background: var(--accent-color);
  color: #fff;
  border: none;
  border-radius: 50%;
  width: 50px;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.5rem;
  cursor: pointer;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  transition: transform 0.2s, box-shadow 0.2s;
  z-index: 1200;

}

.cart-badge-btn:hover {
  transform: scale(1.05);
  box-shadow: 0 6px 18px rgba(0, 0, 0, 0.25);
}

/* badge count */
.badge {
    position: absolute;
    top: -14px;
    right: -10px;
    background: #f33;
    color: #fff;
    border-radius: 50%;
    padding: 3px 4px;
    width: 26px;
    height: 26px;
    font-size: 14px;
    font-weight: 700;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.12);
}

/* --------------------
   Details overlay (modal)
   -------------------- */
.details-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1100;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease;
}

.details-overlay.open {
  opacity: 1;
  pointer-events: auto;
}

.details-content {
  background: #fff;
  padding: 20px;
  border-radius: var(--border-radius);
  max-width: 500px;
  width: 90%;
  max-height: 80vh;
  overflow: auto;
  position: relative;
  box-shadow: var(--elevation-2);
}

.details-image {
  width: 100%;
  height: auto;
  border-radius: var(--border-radius);
}

.details-content .tags {
  display: flex;
  gap: 6px;
  flex-wrap: wrap;
  margin-top: 12px;
}

.details-content .qty-controls {
  display: flex;
  gap: 8px;
  margin-top: 16px;
}

.details-content .qty-controls button {
  padding: 8px 12px;
  border-radius: var(--border-radius);
}

/* --------------------
   Custom radio & checkbox (accessible visual styling)
   -------------------- */
/* visually hide native appearance but keep keyboard focus and accessibility */
input[type="radio"],
input[type="checkbox"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  width: 18px;
  height: 18px;
  border: 2px solid var(--card-border);
  background: #fff;
  border-radius: 6px;
  cursor: pointer;
  position: relative;
  display: inline-block;
  vertical-align: middle;
  transition: border-color 0.18s ease, background 0.18s ease, transform 0.12s ease;
}

/* radio specific: round */
input[type="radio"] {
  border-radius: 50%;
}

/* checked states */
input[type="radio"]:checked,
input[type="checkbox"]:checked {
  border-color: var(--accent-color);
  background: var(--accent-color);
}

/* radio inner dot */
input[type="radio"]:checked::after {
  content: "";
  position: absolute;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: #fff;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* checkbox tick */
input[type="checkbox"]:checked::after {
  content: "âœ”";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 0.78rem;
  color: #fff;
  line-height: 1;
  font-weight: 700;
}

/* focus states for accessibility */
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  box-shadow: 0 0 0 4px rgba(10, 128, 102, 0.08);
  outline: none;
  transform: translateY(-1px);
}

/* make the label clickable with some spacing */
label>input[type="radio"],
label>input[type="checkbox"] {
  margin: 0;
}

/* --------------------
   Responsive adjustments
   -------------------- */
@media (max-width: 699px) {
  .filter-panel {
    width: 90%;
    max-width: 320px;
    top: 60px;
  }

  .filter-body {
    padding: 20px;
    gap: 16px;
  }

  .filter-head {
    padding: 1.5rem;
    max-height: 32px;
    top: 12px
  }

  /* keep filter action buttons side-by-side on mobile (two columns) */
  .filter-actions {
    flex-wrap: nowrap;
    gap: 8px;
    padding: 10px 12px;
    min-height: 62px;
  }

  .filter-actions button {
    font-size: 0.92rem;
    padding: 10px 12px;
  }

  .cards-parent {
    gap: 12px;
    padding: 0.5rem;
  }

  .cart-drawer {
    width: 95%;
    right: -100%;
  }

  .cart-drawer.open {
    right: 0;
    z-index: 9999;
  }
}

/* --------------------
   Small helpers / micro-UX
   -------------------- */
.text-muted {
  color: var(--text-muted);
}

.small {
  font-size: 0.85rem;
  color: var(--text-secondary);
}

/* subtle elevation for interactive containers */
.interactive {
  transition: transform 160ms ease, box-shadow 200ms ease;
}

.interactive:hover {
  transform: translateY(-4px);
  box-shadow: var(--elevation-1);
}

/* utility for hidden on desktop but visible on mobile */
.show-mobile {
  display: none;
}

@media (max-width: 699px) {
  .show-mobile {
    display: inline-block;
  }
}

/* --------------------
   Accessibility: reduced motion
   -------------------- */
@media (prefers-reduced-motion: reduce) {

  .filter-panel,
  .cart-drawer,
  .details-overlay,
  .filter-actions button,
  .chip,
  .cart-badge-btn {
    transition: none !important;
    animation: none !important;
  }
}

.products-page-wrapper {
  .page-head {
    display: flex;
    align-items: start;
    justify-content: space-between;
    gap: 12px;
    flex-direction: column;

    .filterBtn {
      display: flex;
      gap: 8px;
      align-items: center;
      position: relative;
      left: 6px;
      top: 67px;
    }
  }
}

.page-head-wrapper {
  position: relative;
  top: -80px;
}

.cart-actions-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #ffff;

  .btn.primary {
    padding: 12px 17px;
    font-size: 1.17rem;
    border-radius: 6px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    transition: transform 0.2s, box-shadow 0.2s;

    svg {
      font-size: 1.14rem;
      position: relative;
      top: 3px;

    }

  }

  .btn.cancel {
    padding: 8px 12px;
    font-size: 0.9rem;
    border-radius: 6px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    transition: transform 0.2s, box-shadow 0.2s;
  }
}

.cart-icon {
  position: relative;
  top: 3px;
  font-size: 1.3rem;

}

.details-overlay.open {
  .details-content {
    .qty-controls {
      display: none;
    }
  }
}

.cart-footer {
  .cart-total {
    text-align: center;
    font-weight: 700;
    font-size: 1.1rem;
    margin-bottom: 6px;
    border: 1px solid var(--card-border);

  }
}

.details-overlay.open {
  .carousel-wrap {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #fff;
    padding: 12px;
    border-radius: 8px;
  }

  .carousel-main {
    width: 100%;
    max-height: 80vh;
    min-height: 40vh;
    display: flex;
    align-items: center;
    justify-content: center;
    img{
      border-radius: 8px;
      height: 100%;
      width: 100%;
      object-fit: contain;
    }
  }


  .carousel-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(0, 0, 0, 0.35);
    color: #fff;
    border: none;
    padding: 6px 10px;
    font-size: 22px;
    border-radius: 4px;
    cursor: pointer;
  }

  .carousel-nav.left {
    left: 8px;
  }

  .carousel-nav.right {
    right: 8px;
  }

  .carousel-thumbs {
   display:none;
  }

  .thumb-btn {
    border: none;
    background: transparent;
    padding: 0;
    cursor: pointer;
    outline: none;
  }

  .thumb-btn.active {
    box-shadow: 0 0 0 2px var(--accent-color, #3182ce);
    border-radius: 6px;
  }

  .thumb-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    border-radius: 4px;
  }

  .details-meta-block {
    padding: 8px 12px;
    overflow: auto;
  }

  .details-desc {
    color: #444;
    margin-top: 8px;
    margin-bottom: 10px;
  }
}
.cart-item-wrapper{
  display: flex;
  flex-direction: row;
  gap: 10px;
  .lazy-image-wrapper.cart-thumb-image{
   width: 77px;
  position: absolute;
 height: 59px;
  object-fit: cover;
     img{
      height: 100%;
      width: 100%;
      object-fit: contain;
     }
  }
}
.Date-card{
  display: none;
}


/* === Refresh Button Overlay (Bottom Left) === */
/* Position and animation: slides left <-> 5px and fades */
.refresh-overlay-wrapper {
  position: fixed;
  left: 5px; /* visible position */
  bottom: 20px;
  z-index: 1100;
  display: flex;
  align-items: center;
  gap: 8px;
  pointer-events: auto;
  transition: left 0.36s cubic-bezier(0.22, 0.9, 0.25, 1), opacity 0.36s cubic-bezier(0.22, 0.9, 0.25, 1), transform 0.36s ease;
  will-change: left, opacity, transform;
}

/* Hidden state: slide off-screen left and fade out */
.refresh-overlay-wrapper.hidden {
  left: -40px; /* off-screen */
  opacity: 0;
  pointer-events: none;
  transform: translateX(-6px);
}

/* main button */
.refresh-badge-btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  padding: 12px 20px;
  border-radius: 20px;
  background: linear-gradient(135deg, var(--accent-color, #4CAF50) 0%, color-mix(in srgb, var(--accent-color, #4CAF50) 85%, black 5%) 100%);
  color: var(--bg-light);
  font-weight: 600;
  font-size: 14px;
  line-height: 1.2;
  border: none;
  cursor: pointer;
  box-shadow: 0 6px 22px rgba(0,0,0,0.12), 0 2px 8px rgba(0,0,0,0.06);
  transition: transform 0.24s ease, box-shadow 0.24s ease, opacity 0.24s ease;
  min-height: 44px;
  outline: none;
}

/* hover effect */
.refresh-badge-btn:hover:not(.busy) {
  transform: translateY(-2px);
  box-shadow: 0 10px 30px rgba(0,0,0,0.16);
}

/* icon */
.refresh-badge-btn .refresh-icon {
  font-size: 18px;
  line-height: 1;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: transform 0.36s cubic-bezier(0.2, 0.9, 0.3, 1);
  transform-origin: center;
}

/* rotate & scale on hover */
.refresh-badge-btn:hover:not(.busy) .refresh-icon {
  transform: rotate(180deg) scale(1.05);
}

/* text */
.refresh-badge-btn .refresh-text {
  font-size: 14px;
  font-weight: 600;
  letter-spacing: 0.2px;
}

/* icon-only compact look */
.refresh-badge-btn.icon-only {
  padding: 12px;
  width: 48px;
  height: 48px;
  border-radius: 50%;
  gap: 0;
}
.refresh-badge-btn.icon-only .refresh-text { display: none; }

/* busy state */
.refresh-badge-btn.busy {
  opacity: 0.9;
  pointer-events: none;
  cursor: wait;
}
.refresh-badge-btn.busy .refresh-icon {
  animation: spinRefresh 1s linear infinite;
}
@keyframes spinRefresh {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* spinner indicator */
.refresh-badge-btn .refresh-spinner {
  width: 14px;
  height: 14px;
  border: 2px solid rgba(255,255,255,0.35);
  border-top-color: rgba(255,255,255,0.95);
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
  margin-left: 6px;
}
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* initial appearance micro motion */
@keyframes fadeInRefresh {
  from { opacity: 0; transform: translateX(-6px) translateY(6px); }
  to   { opacity: 1; transform: translateX(0) translateY(0); }
}
.refresh-overlay-wrapper:not(.hidden) {
  animation: fadeInRefresh 0.36s cubic-bezier(0.22,0.9,0.3,1);
}
